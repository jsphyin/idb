FORMAT: 1A
HOST: http://boardgamedb.me/

# boardgamedb

This API will display general info about a collection of board games such as their developer(s), genre, and the mechanics they have as well as events for players to meet up and enjoy board games.

## Games [/api/games]

These call provide information for the specific games in our database. 

### List All Board Games [GET] 

+ Response 200 (application/json)

    
        [
            {
                "alt_names": [], 
                "artists": [
                    [
                        12517, 
                        "Marcus Gschwendtner"
                    ]
                ], 
                "desc": "Die Macher is a game ...", 
                "developers": [
                    [
                        1, 
                        "Karl-Heinz Schmiel"
                    ]
                ], 
                "families": [
                    [
                        91, 
                        "Valley Games Classic Line"
                    ], ...
                ], 
                "genres": [
                    [
                        1001, 
                        "Political"
                    ], ...
                ], 
                "id": 1, 
                "img": "https://cf.geekdo-images.com/images/pic159509.jpg", 
                "is_expansion": false, 
                "max_players": 5, 
                "mechanics": [
                    [
                        2012, 
                        "Auction/Bidding"
                    ], ...
                ], 
                "min_players": 3, 
                "name": "Die Macher", 
                "publishers": [
                    [
                        2, 
                        "Moskito Spiele"
                    ], ...
                ], 
                "rating": 7.65648, 
                "year": 1986
            }, ...
        ]

        
### Show Data for One Game [GET /api/game/{id}]

+ Parameters
    + id (required, int, `1`) ... Game ID


+ Response 200 (application/json)

        {
            "alt_names": [], 
            "artists": [
                [
                    12517, 
                    "Marcus Gschwendtner"
                ]
            ], 
            "desc": "Die Macher is a game ...", 
            "developers": [
                [
                    1, 
                    "Karl-Heinz Schmiel"
                ]
            ], 
            "families": [
                [
                    91, 
                    "Valley Games Classic Line"
                ], ...
            ], 
            "genres": [
                [
                    1001, 
                    "Political"
                ], ...
            ], 
            "id": 1, 
            "img": "https://cf.geekdo-images.com/images/pic159509.jpg", 
            "is_expansion": false, 
            "max_players": 5, 
            "mechanics": [
                [
                    2012, 
                    "Auction/Bidding"
                ], ...
            ], 
            "min_players": 3, 
            "name": "Die Macher", 
            "publishers": [
                [
                    2, 
                    "Moskito Spiele"
                ], ...
            ], 
            "rating": 7.65648, 
            "year": 1986
        }


## Developers [/api/developers]

These callsprovide information about the board game developers in our database.

### List All Developers [GET] 

+ Response 200 (application/json)

        [
            {
                "desc": "<p><strong>Karl-Heinz Schmiel</strong> (born November 28, 1948) ...", 
                "games": [
                    [
                        1, 
                        "Die Macher"
                    ], ...
                ], 
                "genres": [
                    [
                        1001, 
                        "Political"
                    ], ...
                ], 
                "id": 1, 
                "img": "https://cf.geekdo-images.com/images/pic477390_t.jpg", 
                "name": "Karl-Heinz Schmiel", 
                "website": "http://..."
            }, ...
        ]

        
### Show Data for One Developer [GET /api/developer/{id}]

+ Parameters
    + id (required, int, `1`) ... Developer ID


+ Response 200 (application/json)

        {
            "desc": "<p><strong>Karl-Heinz Schmiel</strong> (born November 28, 1948) ...", 
            "games": [
                [
                    1, 
                    "Die Macher"
                ], ...
            ], 
            "genres": [
                [
                    1001, 
                    "Political"
                ], ...
            ], 
            "id": 1, 
            "img": "https://cf.geekdo-images.com/images/pic477390_t.jpg", 
            "name": "Karl-Heinz Schmiel", 
            "website": "http://..."
        }  



## Genres [/api/genres]

These calls provide data of all the genres that our games fall under. 

### List All Genres [GET] 

+ Response 200 (application/json)

        [
            {
                "desc": "<p><em>Political</em> games encourage ...", 
                "developers": [
                    [
                        1, 
                        "Karl-Heinz Schmiel"
                    ], ...
                ], 
                "events": [], 
                "games": [
                    [
                        1, 
                        "Die Macher"
                    ], ..
                ], 
                "id": 1001, 
                "img": "https://cf.geekdo-images.com/images/pic1657689_t.jpg", 
                "name": "Political"
            }, ...
        ]


### Show Data for One Genre [GET /api/genre/{id}]

+ Parameters
    + id (required, int, `1`) ... Genre ID


+ Response 200 (application/json)

        {
            "desc": "<p><em>Political</em> games encourage ...", 
            "developers": [
                [
                    1, 
                    "Karl-Heinz Schmiel"
                ], ...
            ], 
            "events": [], 
            "games": [
                [
                    1, 
                    "Die Macher"
                ], ..
            ], 
            "id": 1001, 
            "img": "https://cf.geekdo-images.com/images/pic1657689_t.jpg", 
            "name": "Political"
        }


## Events [/api/events]

These calls provide information about the board game events in our database.

### List All Events [GET] 

+ Response 200 (application/json)

        [
            {
                "desc": "<p>Come and join us ...", 
                "games": [], 
                "genres": [
                    [
                        1019, 
                        "Wargame"
                    ], ...
                ], 
                "id": 1, 
                "img": "https://cf.geekdo-images.com/images/pic1657689_t.jpg", 
                "link": "https://www.meetup.com/SABoardGamers/events/244392199/", 
                "location": "San Antonio, TX", 
                "name": "SA Board Gamers Thursday night gaming", 
                "time": "Thu, 26 Oct 2017 18:00:00 GMT"
            }, ...
        ]
        
        
### Show Data for One Event [GET /api/event/{id}]

+ Parameters
    + id (required, int, `1`) ... Event ID


+ Response 200 (application/json)

        {
            "desc": "<p>Come and join us ...", 
            "games": [], 
            "genres": [
                [
                    1019, 
                    "Wargame"
                ], ...
            ], 
            "id": 1, 
            "img": "https://cf.geekdo-images.com/images/pic1657689_t.jpg", 
            "link": "https://www.meetup.com/SABoardGamers/events/244392199/", 
            "location": "San Antonio, TX", 
            "name": "SA Board Gamers Thursday night gaming", 
            "time": "Thu, 26 Oct 2017 18:00:00 GMT"
        }
        
## Search [/api/search/{attribute1}={val1}&{attribute2}={val2}...]

This call provides search functionality to our website. (Not yet implemented)

### Search Model Instance by Attribute [GET]

+ Parameters
    + attribute1 (required, string, `popularity`) ... Attribute to search
    + val1 (required, string, `1`) ... Value of attribute
    + attribute2 (required, string, `rating`) ... Attribute to search
    + val2 (required, string, `5`) ... Value of attribute
    
+ Response 200 (application/json)

        {
            “results”: [{
                    “id”: 1,
                    “model”: “Board Game”,
                    “name”: “Catan”
                },
                {
                    “id”: 1,
                    “model”: “Casual Meet-up”,
                    “name”: “Catan and Ticket to Ride Crew”
                }
                ...
            ]
        }